spring:
  application:
    name: STM-Microservices-Kafka-Sample
server:
  port: 9095

#kafka specific
## Zookeeper: required by Kafka
#zookeeper:
#  image: 'bitnami/zookeeper:3'
#  ports:
#    - '2181:2181'
#    volumes:
#      - 'zookeeper_data:/bitnami'
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#
## Kafka itself
#kafka:
#  image: 'bitnami/kafka:2'
#  ports:
#    - '9092:9092'
#  volumes:
#    - 'kafka_data:/bitnami'
#  environment:
#    - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#    - ALLOW_PLAINTEXT_LISTENER=yes
#    - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
#  depends_on:
#    - zookeeper
#  kafka:
#    consumer:
#      bootstrap-servers: localhost:9092
#      group-id: group-id
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
##      properties:
##        spring:org.apache.kafka.common.serialization.StringSerializer
##          json:
##            trusted:
##              packages: *
#    producer:
#      bootstrap-servers: localhost:9092
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

kafka-topic-name : stm_orders